spring.application.name=customer-service
server.port=8080

#config and eureka
spring.cloud.config.enabled=true
spring.cloud.config.uri=http://host.docker.internal:8888
spring.cloud.config.discovery.enabled=true
spring.cloud.config.name=customer-service
spring.cloud.config.profile=dev
eureka.instance.prefer-ip-address=true

#security
security.jwt.secret-key=6c0304629cf3c95a3cef0570c413b332703784149cdc11a1d2496dc851182e8c
security.jwt.expiration-time=86400000

#db and liquibase
spring.liquibase.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS testdb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS testdb;DB_CLOSE_ON_EXIT=FALSE

#monitoring and logging
management.endpoints.web.exposure.include=health,info,prometheus
management.prometheus.metrics.export.enabled=true
management.server.port=8087